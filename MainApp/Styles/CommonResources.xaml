<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:MSFSPopoutPanelManager.MainApp.Converter"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converter:KeystrokeBindingsConverter x:Key="KeystrokeBindingsConverter" />
    <converter:InverseBooleanOrConverter x:Key="InverseBooleanOrConverter" />

    <Style
        x:Key="AppWindowHeaderButton"
        BasedOn="{StaticResource MaterialDesignIconButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Width" Value="28" />
        <Setter Property="Height" Value="28" />
        <Setter Property="Margin" Value="0,0,10,0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style
        x:Key="IconToggleButton"
        BasedOn="{StaticResource MaterialDesignActionSecondaryToggleButton}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Width" Value="28" />
        <Setter Property="Height" Value="28" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="False" />
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="LimeGreen" />
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Foreground" Value="White" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#505050" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="IconButton"
        BasedOn="{StaticResource MaterialDesignIconForegroundButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Width" Value="35" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="False" />
    </Style>

    <Style
        x:Key="FlatButton"
        BasedOn="{StaticResource MaterialDesignOutlinedButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <Style
        x:Key="TextBlockHeading"
        BasedOn="{StaticResource MaterialDesignTextBlock}"
        TargetType="TextBlock">
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Margin" Value="0,5,0,0" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style
        x:Key="TextBlockLabel"
        BasedOn="{StaticResource MaterialDesignTextBlock}"
        TargetType="TextBlock">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0" />
    </Style>

    <Style
        x:Key="TextBlockBody"
        BasedOn="{StaticResource MaterialDesignTextBlock}"
        TargetType="TextBlock">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0" />
    </Style>

    <Style
        x:Key="FloatingHintTextBox"
        BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}"
        TargetType="TextBox">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin" Value="10,0,10,0" />
        <Setter Property="Width" Value="85" />
        <Setter Property="Height" Value="34" />
        <Setter Property="VerticalContentAlignment" Value="Bottom" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="materialDesign:HintAssist.FloatingScale" Value="0.8" />
        <Setter Property="materialDesign:HintAssist.HelperTextFontSize" Value="12" />
    </Style>

    <Style
        x:Key="FloatingHintTextBoxReadOnly"
        BasedOn="{StaticResource FloatingHintTextBox}"
        TargetType="TextBox">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="IsReadOnly" Value="True" />
    </Style>

    <Style
        x:Key="Button"
        BasedOn="{StaticResource MaterialDesignOutlinedLightButton}"
        TargetType="Button">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Padding" Value="10,0,10,0" />
        <Setter Property="Height" Value="20" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="CustomListViewItem" TargetType="ListViewItem">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="2,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Preferences and Help  -->
    <Style x:Key="TreeViewItemStyle" TargetType="TreeViewItem">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Margin" Value="0,0,0,10" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="#666666" />
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="White" />
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent" />
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="White" />
        </Style.Resources>
    </Style>
    <Style x:Key="SectionHeader" TargetType="StackPanel">
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Margin" Value="0,0,20,15" />
        <Setter Property="Orientation" Value="Vertical" />
    </Style>
    <Style TargetType="Line">
        <Setter Property="Margin" Value="0,5,0,5" />
        <Setter Property="Stretch" Value="Fill" />
        <Setter Property="Stroke" Value="Gray" />
        <Setter Property="X2" Value="1" />
    </Style>

    <!--  Logic styles  -->
    <Style x:Key="DisableWhenFullScreen" TargetType="StackPanel">
        <Style.Triggers>
            <DataTrigger Binding="{Binding DataItem.FullScreen}" Value="True">
                <Setter Property="Opacity" Value="0.5" />
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="IsHitTestVisible" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DataItem.FullScreen}" Value="False">
                <Setter Property="IsEnabled" Value="True" />
                <Setter Property="IsHitTestVisible" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DisableWhenIsNotFloatingPanel" TargetType="StackPanel">
        <Style.Triggers>
            <DataTrigger Binding="{Binding DataItem.FloatingPanel.IsEnabled}" Value="True">
                <Setter Property="IsEnabled" Value="True" />
                <Setter Property="IsHitTestVisible" Value="True" />
            </DataTrigger>
            <DataTrigger Binding="{Binding DataItem.FloatingPanel.IsEnabled}" Value="False">
                <Setter Property="Opacity" Value="0.5" />
                <Setter Property="IsEnabled" Value="False" />
                <Setter Property="IsHitTestVisible" Value="False" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
